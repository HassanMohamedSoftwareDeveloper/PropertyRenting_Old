<Project Sdk="Microsoft.NET.Sdk.Web">

	<PropertyGroup>
		<TargetFramework>net6.0</TargetFramework>
		<Nullable>disable</Nullable>
		<ImplicitUsings>enable</ImplicitUsings>
		<SpaRoot>ClientApp\</SpaRoot>
		<DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
	</PropertyGroup>

	<ItemGroup>
		<!-- Don't publish the SPA source files, but do show them in the project files list -->
		<Content Remove="$(SpaRoot)**" />
		<None Remove="$(SpaRoot)**" />
		<None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
	</ItemGroup>

	<Target Name="BuildAsset" BeforeTargets="Compile" Condition=" '$(Configuration)' == 'Release' ">
		<!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
	</Target>

	<!--<Target Name="CopyPartials" BeforeTargets="Compile" DependsOnTargets="BuildAsset" Condition=" '$(Configuration)' == 'Release' ">
		-->
	<!-- Generate new _AppScriptsProd.cshtml and _AppStyleSheetsProd.cshtml based on the freshly created production build -->
	<!--
		<Exec ToolExe="C:\Program Files\Git\git-bash.exe" Command="source scripts/generate-clientapp-assets.zsh" />
	</Target>-->

	<Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
		<!-- Include the newly-built files in the publish output -->
		<ItemGroup>
			<DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
			<DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
			<ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
				<RelativePath>%(DistFiles.Identity)</RelativePath>
				<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
				<ExcludeFromSingleFile>true</ExcludeFromSingleFile>
			</ResolvedFileToPublish>
		</ItemGroup>
	</Target>

	<ItemGroup>
	  <Content Remove="bundleconfig.json" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="6.0.8" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Proxies" Version="6.0.9" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="6.0.9" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="6.0.9">
		  <PrivateAssets>all</PrivateAssets>
		  <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="6.0.9" />
		<PackageReference Include="Quartz.Extensions.Hosting" Version="3.4.0" />
	</ItemGroup>

	<ItemGroup>
		<Folder Include="ClientApp\src\app\Vouchers\CashBank\" />
		<Folder Include="Resources\Pages\" />
	</ItemGroup>

	<ItemGroup>
	  <None Include="bundleconfig.json" />
	</ItemGroup>

	<ItemGroup>
		<Compile Update="Resources\LayoutRes.Designer.cs">
			<DesignTime>True</DesignTime>
			<AutoGen>True</AutoGen>
			<DependentUpon>LayoutRes.resx</DependentUpon>
		</Compile>
	</ItemGroup>

	<ItemGroup>
		<EmbeddedResource Update="Resources\LayoutRes.ar.resx">
			<Generator>PublicResXFileCodeGenerator</Generator>
		</EmbeddedResource>
		<EmbeddedResource Update="Resources\LayoutRes.resx">
			<Generator>PublicResXFileCodeGenerator</Generator>
			<LastGenOutput>LayoutRes.Designer.cs</LastGenOutput>
		</EmbeddedResource>
	</ItemGroup>



</Project>
